<UserControl x:Class="STK_ToolBox.View.IOCheckControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <UserControl.Resources>
        <!-- 색상 팔레트 -->
        <SolidColorBrush x:Key="MintBrush" Color="#18C29C"/>
        <SolidColorBrush x:Key="CheckedRowBrush" Color="#EAFBF5"/>
        <SolidColorBrush x:Key="SelectedRowBrush" Color="#E6F1FF"/>
        <SolidColorBrush x:Key="SelectedRowText" Color="#0A0A0A"/>
        <SolidColorBrush x:Key="GridBorderBrush" Color="#D0D7E2"/>
        <SolidColorBrush x:Key="ColBgName"   Color="#F7FAFF"/>
        <SolidColorBrush x:Key="ColBgOutput" Color="#FFF4E6"/>

        <!-- 텍스트/버튼 -->
        <Style x:Key="IoNameText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentState}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource MintBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsBContact}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource MintBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AddrText" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>

        <Style x:Key="ToggleBtnStyle" TargetType="Button">
            <Setter Property="Padding" Value="10,4"/>
            <Setter Property="MinWidth" Value="86"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Focusable" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentState}" Value="True">
                    <Setter Property="Content" Value="Turn OFF"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentState}" Value="False">
                    <Setter Property="Content" Value="Turn ON"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CanToggle}" Value="False">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Opacity" Value="0.45"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid 행/셀 (체크 → 셀 배경도 동기화) -->
        <Style x:Key="RowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="FontSize" Value="14"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked}" Value="True">
                    <Setter Property="Background" Value="{StaticResource CheckedRowBrush}"/>
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource SelectedRowBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource SelectedRowText}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CellStyle" TargetType="DataGridCell">
            <Setter Property="Padding" Value="12,2,12,2"/>
            <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FontSize" Value="14"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked}" Value="True">
                    <Setter Property="Background" Value="{StaticResource CheckedRowBrush}"/>
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource SelectedRowText}"/>
                    <Setter Property="Background" Value="{StaticResource SelectedRowBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CellStyleNameCol" TargetType="DataGridCell" BasedOn="{StaticResource CellStyle}">
            <Setter Property="Background" Value="{StaticResource ColBgName}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked}" Value="True">
                    <Setter Property="Background" Value="{StaticResource CheckedRowBrush}"/>
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource SelectedRowBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CellStyleOutputCol" TargetType="DataGridCell" BasedOn="{StaticResource CellStyle}">
            <Setter Property="Background" Value="{StaticResource ColBgOutput}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked}" Value="True">
                    <Setter Property="Background" Value="{StaticResource CheckedRowBrush}"/>
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource SelectedRowBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 한쪽(16개) 템플릿: 읽기전용으로 더블클릭 편집 차단 -->
        <DataTemplate x:Key="SixteenGridSideTemplate16">
            <DataGrid ItemsSource="{Binding}"
                      AutoGenerateColumns="False"
                      HeadersVisibility="Column"
                      IsReadOnly="True"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      GridLinesVisibility="None"
                      RowStyle="{StaticResource RowStyle}"
                      BorderThickness="1"
                      BorderBrush="{StaticResource GridBorderBrush}"
                      Margin="0"
                      RowHeaderWidth="0"
                      ColumnHeaderHeight="30"
                      RowHeight="30"
                      AlternationCount="2"
                      AlternatingRowBackground="#FBFCFE"
                      SelectionMode="Single"
                      SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <Style TargetType="DataGridCell" BasedOn="{StaticResource CellStyle}">
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="Padding" Value="12,2,12,2"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ADDR" Binding="{Binding Address}" Width="100">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource AddrText}"/>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="IO NAME" Binding="{Binding IOName}" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource IoNameText}"/>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource CellStyleNameCol}"/>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <DataGridCheckBoxColumn Header="STAT" Binding="{Binding CurrentState}" IsReadOnly="True" Width="80"/>

                    <DataGridTemplateColumn Header="OUTPUT" Width="110">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource CellStyleOutputCol}"/>
                        </DataGridTemplateColumn.CellStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource ToggleBtnStyle}"
                                        Command="{Binding DataContext.ToggleOutputCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        CommandParameter="{Binding}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="CHECK" Width="90">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Focusable="False"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DataTemplate>

        <!-- 좌측 탭(DetailUnit만) -->
        <Style x:Key="LeftTabItemStyle" TargetType="TabItem">
            <Setter Property="Width" Value="180"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="Padding" Value="8,2"/>
        </Style>
        <DataTemplate x:Key="LeftTabHeaderTemplate">
            <TextBlock Text="{Binding Header}" FontSize="13" TextTrimming="CharacterEllipsis"/>
        </DataTemplate>
    </UserControl.Resources>

    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 상단 버튼 -->
        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
            <Button Content="저장하기" Command="{Binding SaveCommand}"  Margin="0,0,8,0"/>
            <Button Content="불러오기" Command="{Binding LoadStateCommand}" Margin="0,0,8,0"/>
            <Button Content="도움말"   Command="{Binding HelpCommand}"/>
        </StackPanel>

        <!-- 탭 (좌:헤더/우:내용) -->
        <TabControl Grid.Row="1"
                    ItemsSource="{Binding Tabs}"
                    SelectedItem="{Binding SelectedTab, Mode=TwoWay}"
                    TabStripPlacement="Left"
                    ItemContainerStyle="{StaticResource LeftTabItemStyle}"
                    ItemTemplate="{StaticResource LeftTabHeaderTemplate}">
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="12"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- 좌 16 -->
                        <ContentControl Content="{Binding Left16}"
                                        ContentTemplate="{StaticResource SixteenGridSideTemplate16}"/>
                        <Grid Grid.Column="1"/>
                        <!-- 우 16 -->
                        <ContentControl Grid.Column="2"
                                        Content="{Binding Right16}"
                                        ContentTemplate="{StaticResource SixteenGridSideTemplate16}"/>
                    </Grid>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>

        <!-- 하단 상태/경로 -->
        <DockPanel Grid.Row="2" Margin="0,8,0,0">
            <TextBlock DockPanel.Dock="Left"
                       Text="{Binding HwStatusText}"
                       Foreground="{Binding HwStatusBrush}"
                       FontWeight="SemiBold"
                       Margin="0,0,12,0"/>
            <TextBlock Text="{Binding StateFilePath}" Foreground="#6B7280" FontSize="11"/>
        </DockPanel>
    </Grid>
</UserControl>
